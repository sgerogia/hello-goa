openapi: 3.0.3
info:
    title: Authenticated Math Service
    description: API for numeric operations, protected by OAuth2
    version: "1.0"
servers:
    - url: http://localhost:8080
paths:
    /auth:
        post:
            tags:
                - token
            summary: auth token
            description: |-
                Accepts username and password in the body and returns JWT OAUTH2/OIDC token with the username as a subject, expiring in 1 hour.
                The username and password are not verified, but cannot be empty strings.
            operationId: token#auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthRequestBody'
                        example:
                            password: password
                            username: user
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Omnis repudiandae vitae inventore.
                            example: Voluptatem eligendi dolore magni delectus rerum veniam.
                "400":
                    description: 'MalformedPayload: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /math/openapi.json:
        get:
            tags:
                - math
            summary: Download ../gen/http/math_openapi.json
            operationId: math#/math/openapi.json
            responses:
                "200":
                    description: File downloaded
    /math/openapi.yaml:
        get:
            tags:
                - math
            summary: Download ../gen/http/math_openapi.yaml
            operationId: math#/math/openapi.yaml
            responses:
                "200":
                    description: File downloaded
    /mul/{numbers}:
        get:
            tags:
                - math
            summary: mul math
            description: "Accepts a sequence of numbers and multiplies them.\nIf any of the arguments is not a valid number, it returns an error. \n\nProtected with a valid JWT token, generated by the /auth endpoint, provided as a Bearer Authorization header.\nThe response is the multiplication of all numbers."
            operationId: math#mul
            parameters:
                - name: numbers
                  in: path
                  description: The array of numbers to multiply
                  required: true
                  schema:
                    type: array
                    items:
                        type: string
                        example: Vel pariatur ut eos sint officiis accusamus.
                    description: The array of numbers to multiply
                    example:
                        - "4"
                        - "3.543"
                        - "-2"
                  example:
                    - "4"
                    - "3.543"
                    - "-2"
            responses:
                "200":
                    description: OK response.
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Sed id dolorem sapiente dolorem dignissimos.
                            example: Veniam libero et ratione omnis distinctio quis.
                "400":
                    description: 'MalformedPayload: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization: []
    /sum:
        post:
            tags:
                - math
            summary: sum math
            description: "Accepts an arbitrary document as payload and sums the numbers contained within.\nThe document can contain a variety of things: arrays [1,2,3,4], objects {\"a\":1, \"b\":2, \"c\":3}, numbers, and strings. \nThe endpoint should find all of the numbers throughout the document and add them together.\n\nFor example:\n* [1,2,3,4] and {\"a\":6,\"b\":4} both have a auth_sum of 10.\n* [[[2]]] and {\"a\":{\"b\":4},\"c\":-2} both have a auth_sum of 2.\n* {\"a\":[-1,1,\"dark\"]} and [-1,{\"a\":1, \"b\":\"light\"}] both have a auth_sum of 0.\n* [] and {} both have a auth_sum of 0.\n\nProtected with a valid JWT token, generated by the /auth endpoint, provided as a Bearer Authorization header.\nThe response is the sum of all numbers in the document."
            operationId: math#sum
            requestBody:
                description: The JSON document to sum the numbers contained within
                required: true
                content:
                    application/json:
                        schema:
                            type: string
                            description: The JSON document to sum the numbers contained within
                            example: '{"a":{"b":4},"c":-2}'
                        example: '{"a":{"b":4},"c":-2}'
            responses:
                "200":
                    description: OK response.
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Sint doloremque qui voluptates.
                            example: Aperiam quisquam dolore aut aliquid nam deserunt.
                "400":
                    description: 'MalformedPayload: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization: []
    /token/openapi.json:
        get:
            tags:
                - token
            summary: Download ../gen/http/token_openapi.json
            operationId: token#/token/openapi.json
            responses:
                "200":
                    description: File downloaded
    /token/openapi.yaml:
        get:
            tags:
                - token
            summary: Download ../gen/http/token_openapi.yaml
            operationId: token#/token/openapi.yaml
            responses:
                "200":
                    description: File downloaded
components:
    schemas:
        AuthRequestBody:
            type: object
            properties:
                password:
                    type: string
                    description: Password to access the service.
                    example: password
                username:
                    type: string
                    description: Username to access the service.
                    example: user
            example:
                password: password
                username: user
        Error:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Is the error a server-side fault?
                    example: true
                id:
                    type: string
                    description: ID is a unique identifier for this particular occurrence of the problem.
                    example: 123abc
                message:
                    type: string
                    description: Message is a human-readable explanation specific to this occurrence of the problem.
                    example: parameter 'p' must be an integer
                name:
                    type: string
                    description: Name is the name of this class of errors.
                    example: bad_request
                temporary:
                    type: boolean
                    description: Is the error temporary?
                    example: true
                timeout:
                    type: boolean
                    description: Is the error a timeout?
                    example: true
            example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
    securitySchemes:
        jwt_header_Authorization:
            type: http
            description: JWT-based authentication
            scheme: bearer
tags:
    - name: token
      description: OAuth2 Authorisation service.
    - name: math
      description: A JWT-authenticated math operations service.
