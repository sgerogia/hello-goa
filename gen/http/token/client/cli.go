// Code generated by goa v3.8.5, DO NOT EDIT.
//
// token HTTP client CLI support package
//
// Command:
// $ goa gen github.com/sgerogia/hello-goa/design

package client

import (
	"encoding/json"
	"fmt"

	token "github.com/sgerogia/hello-goa/gen/token"
)

// BuildAuthPayload builds the payload for the token auth endpoint from CLI
// flags.
func BuildAuthPayload(tokenAuthBody string) (*token.User, error) {
	var err error
	var body AuthRequestBody
	{
		err = json.Unmarshal([]byte(tokenAuthBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"password\": \"password\",\n      \"username\": \"user\"\n   }'")
		}
	}
	v := &token.User{
		Username: body.Username,
		Password: body.Password,
	}

	return v, nil
}
