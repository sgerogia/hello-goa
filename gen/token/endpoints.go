// Code generated by goa v3.8.5, DO NOT EDIT.
//
// token endpoints
//
// Command:
// $ goa gen github.com/sgerogia/hello-goa/design

package token

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "token" service endpoints.
type Endpoints struct {
	Auth goa.Endpoint
}

// NewEndpoints wraps the methods of the "token" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Auth: NewAuthEndpoint(s),
	}
}

// Use applies the given middleware to all the "token" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Auth = m(e.Auth)
}

// NewAuthEndpoint returns an endpoint function that calls the method "auth" of
// service "token".
func NewAuthEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*User)
		return s.Auth(ctx, p)
	}
}
