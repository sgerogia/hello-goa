// Code generated by goa v3.8.5, DO NOT EDIT.
//
// math service
//
// Command:
// $ goa gen github.com/sgerogia/hello-goa/design

package math

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	"goa.design/goa/v3/security"
)

// A JWT-authenticated math operations service.
type Service interface {
	// Accepts an arbitrary document as payload and sums the numbers contained
	// within.
	// The document can contain a variety of things: arrays [1,2,3,4], objects
	// {"a":1, "b":2, "c":3}, numbers, and strings.
	// The endpoint should find all of the numbers throughout the document and add
	// them together.

	// For example:
	// * [1,2,3,4] and {"a":6,"b":4} both have a auth_sum of 10.
	// * [[[2]]] and {"a":{"b":4},"c":-2} both have a auth_sum of 2.
	// * {"a":[-1,1,"dark"]} and [-1,{"a":1, "b":"light"}] both have a auth_sum of
	// 0.
	// * [] and {} both have a auth_sum of 0.

	// Protected with a valid JWT token, generated by the /auth endpoint, provided
	// as a Bearer Authorization header.
	// The response is the sum of all numbers in the document.
	Sum(context.Context, *SumPayload) (res string, err error)
	// Accepts a sequence of numbers and multiplies them.
	// If any of the arguments is not a valid number, it returns an error.

	// Protected with a valid JWT token, generated by the /auth endpoint, provided
	// as a Bearer Authorization header.
	// The response is the multiplication of all numbers.
	Mul(context.Context, *MulPayload) (res string, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "math"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"sum", "mul"}

// MulPayload is the payload type of the math service mul method.
type MulPayload struct {
	// The array of numbers to multiply
	Numbers []string
	// The JWT containing user information
	Token string
}

// SumPayload is the payload type of the math service sum method.
type SumPayload struct {
	// The JSON document to sum the numbers contained within
	Doc string
	// The JWT containing user information
	Token string
}

// MakeUnauthorized builds a goa.ServiceError from an error.
func MakeUnauthorized(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "Unauthorized", false, false, false)
}

// MakeMalformedPayload builds a goa.ServiceError from an error.
func MakeMalformedPayload(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "MalformedPayload", false, false, false)
}
