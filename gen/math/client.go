// Code generated by goa v3.8.5, DO NOT EDIT.
//
// math client
//
// Command:
// $ goa gen github.com/sgerogia/hello-goa/design

package math

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "math" service client.
type Client struct {
	SumEndpoint goa.Endpoint
	MulEndpoint goa.Endpoint
}

// NewClient initializes a "math" service client given the endpoints.
func NewClient(sum, mul goa.Endpoint) *Client {
	return &Client{
		SumEndpoint: sum,
		MulEndpoint: mul,
	}
}

// Sum calls the "sum" endpoint of the "math" service.
// Sum may return the following errors:
//   - "Unauthorized" (type *goa.ServiceError)
//   - "MalformedPayload" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Sum(ctx context.Context, p *SumPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.SumEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Mul calls the "mul" endpoint of the "math" service.
// Mul may return the following errors:
//   - "Unauthorized" (type *goa.ServiceError)
//   - "MalformedPayload" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Mul(ctx context.Context, p *MulPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.MulEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
